{"ast":null,"code":"var _jsxFileName = \"/Users/fugamaejima/\\u7F6E\\u304D\\u5834/my-color-code-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\nconst App = () => {\n  _s();\n  const [color, setColor] = useState('');\n  const [userColor, setUserColor] = useState('');\n  const [result, setResult] = useState('');\n  useEffect(() => {\n    setNewColor();\n  }, []);\n  const setNewColor = () => {\n    const randomColor = getRandomColor();\n    setColor(randomColor);\n    setUserColor('');\n    setResult('');\n  };\n  const rgbToHex = (r, g, b) => {\n    const componentToHex = c => {\n      const hex = c.toString(16);\n      return hex.length === 1 ? \"0\" + hex : hex;\n    };\n    return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n  };\n  const hexToRgb = hex => {\n    const bigint = parseInt(hex.slice(1), 16);\n    const r = bigint >> 16 & 255;\n    const g = bigint >> 8 & 255;\n    const b = bigint & 255;\n    return {\n      r,\n      g,\n      b\n    };\n  };\n  const checkColor = () => {\n    const {\n      r,\n      g,\n      b\n    } = hexToRgb(color);\n    const userColorUpper = userColor.toUpperCase();\n    const hexColor = rgbToHex(r, g, b).toUpperCase();\n    if (!userColorUpper) {\n      setResult(`正解は ${hexColor}`);\n    } else if (userColorUpper === hexColor) {\n      setResult('Correct!');\n    } else {\n      setResult(`違うよ! 正解の色は ${hexColor}だよ`);\n    }\n    setNewColor();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"colorCircle\",\n      className: \"w-24 h-24 rounded-full mb-5\",\n      style: {\n        backgroundColor: color\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"colorInput\",\n      value: userColor,\n      placeholder: \"#000000\",\n      onChange: e => setUserColor(e.target.value),\n      className: \"p-2 text-lg mb-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkColor,\n      className: \"p-2 text-lg bg-blue-500 text-white rounded cursor-pointer\",\n      children: \"Check Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"result\",\n      className: \"text-lg mt-5\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"j/4kz+cDEl77VbpYMb/80n3rFJc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","getRandomColor","letters","color","i","Math","floor","random","App","_s","setColor","userColor","setUserColor","result","setResult","setNewColor","randomColor","rgbToHex","r","g","b","componentToHex","c","hex","toString","length","hexToRgb","bigint","parseInt","slice","checkColor","userColorUpper","toUpperCase","hexColor","className","children","id","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/fugamaejima/置き場/my-color-code-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst getRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nconst App = () => {\n  const [color, setColor] = useState('');\n  const [userColor, setUserColor] = useState('');\n  const [result, setResult] = useState('');\n\n  useEffect(() => {\n    setNewColor();\n  }, []);\n\n  const setNewColor = () => {\n    const randomColor = getRandomColor();\n    setColor(randomColor);\n    setUserColor('');\n    setResult('');\n  };\n\n  const rgbToHex = (r, g, b) => {\n    const componentToHex = (c) => {\n      const hex = c.toString(16);\n      return hex.length === 1 ? \"0\" + hex : hex;\n    };\n    return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n  };\n\n  const hexToRgb = (hex) => {\n    const bigint = parseInt(hex.slice(1), 16);\n    const r = (bigint >> 16) & 255;\n    const g = (bigint >> 8) & 255;\n    const b = bigint & 255;\n    return { r, g, b };\n  };\n\n  const checkColor = () => {\n    const { r, g, b } = hexToRgb(color);\n    const userColorUpper = userColor.toUpperCase();\n    const hexColor = rgbToHex(r, g, b).toUpperCase();\n\n    if (!userColorUpper) {\n      setResult(`正解は ${hexColor}`);\n    } else if (userColorUpper === hexColor) {\n      setResult('Correct!');\n    } else {\n      setResult(`違うよ! 正解の色は ${hexColor}だよ`);\n    }\n    setNewColor();\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-200\">\n      <div id=\"colorCircle\" className=\"w-24 h-24 rounded-full mb-5\" style={{ backgroundColor: color }}></div>\n      <input\n        type=\"text\"\n        id=\"colorInput\"\n        value={userColor}\n        placeholder=\"#000000\"\n        onChange={(e) => setUserColor(e.target.value)}\n        className=\"p-2 text-lg mb-5\"\n      />\n      <button onClick={checkColor} className=\"p-2 text-lg bg-blue-500 text-white rounded cursor-pointer\">\n        Check Color\n      </button>\n      <p id=\"result\" className=\"text-lg mt-5\">{result}</p>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,OAAO,GAAG,kBAAkB;EAClC,IAAIC,KAAK,GAAG,GAAG;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1BD,KAAK,IAAID,OAAO,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;EAClD;EACA,OAAOJ,KAAK;AACd,CAAC;AAED,MAAMK,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdiB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,WAAW,GAAGf,cAAc,CAAC,CAAC;IACpCS,QAAQ,CAACM,WAAW,CAAC;IACrBJ,YAAY,CAAC,EAAE,CAAC;IAChBE,SAAS,CAAC,EAAE,CAAC;EACf,CAAC;EAED,MAAMG,QAAQ,GAAGA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,KAAK;IAC5B,MAAMC,cAAc,GAAIC,CAAC,IAAK;MAC5B,MAAMC,GAAG,GAAGD,CAAC,CAACE,QAAQ,CAAC,EAAE,CAAC;MAC1B,OAAOD,GAAG,CAACE,MAAM,KAAK,CAAC,GAAG,GAAG,GAAGF,GAAG,GAAGA,GAAG;IAC3C,CAAC;IACD,OAAO,GAAG,GAAGF,cAAc,CAACH,CAAC,CAAC,GAAGG,cAAc,CAACF,CAAC,CAAC,GAAGE,cAAc,CAACD,CAAC,CAAC;EACxE,CAAC;EAED,MAAMM,QAAQ,GAAIH,GAAG,IAAK;IACxB,MAAMI,MAAM,GAAGC,QAAQ,CAACL,GAAG,CAACM,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACzC,MAAMX,CAAC,GAAIS,MAAM,IAAI,EAAE,GAAI,GAAG;IAC9B,MAAMR,CAAC,GAAIQ,MAAM,IAAI,CAAC,GAAI,GAAG;IAC7B,MAAMP,CAAC,GAAGO,MAAM,GAAG,GAAG;IACtB,OAAO;MAAET,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC;EACpB,CAAC;EAED,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAM;MAAEZ,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAGM,QAAQ,CAACvB,KAAK,CAAC;IACnC,MAAM4B,cAAc,GAAGpB,SAAS,CAACqB,WAAW,CAAC,CAAC;IAC9C,MAAMC,QAAQ,GAAGhB,QAAQ,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,CAACY,WAAW,CAAC,CAAC;IAEhD,IAAI,CAACD,cAAc,EAAE;MACnBjB,SAAS,CAAC,OAAOmB,QAAQ,EAAE,CAAC;IAC9B,CAAC,MAAM,IAAIF,cAAc,KAAKE,QAAQ,EAAE;MACtCnB,SAAS,CAAC,UAAU,CAAC;IACvB,CAAC,MAAM;MACLA,SAAS,CAAC,cAAcmB,QAAQ,IAAI,CAAC;IACvC;IACAlB,WAAW,CAAC,CAAC;EACf,CAAC;EAED,oBACEf,OAAA;IAAKkC,SAAS,EAAC,oEAAoE;IAAAC,QAAA,gBACjFnC,OAAA;MAAKoC,EAAE,EAAC,aAAa;MAACF,SAAS,EAAC,6BAA6B;MAACG,KAAK,EAAE;QAAEC,eAAe,EAAEnC;MAAM;IAAE;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvG1C,OAAA;MACE2C,IAAI,EAAC,MAAM;MACXP,EAAE,EAAC,YAAY;MACfQ,KAAK,EAAEjC,SAAU;MACjBkC,WAAW,EAAC,SAAS;MACrBC,QAAQ,EAAGC,CAAC,IAAKnC,YAAY,CAACmC,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE;MAC9CV,SAAS,EAAC;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACF1C,OAAA;MAAQiD,OAAO,EAAEnB,UAAW;MAACI,SAAS,EAAC,2DAA2D;MAAAC,QAAA,EAAC;IAEnG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT1C,OAAA;MAAGoC,EAAE,EAAC,QAAQ;MAACF,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEtB;IAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAACjC,EAAA,CAhEID,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AAkET,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}